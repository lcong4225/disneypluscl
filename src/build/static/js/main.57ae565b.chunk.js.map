{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","firebase.js","features/user/userSlice.js","components/Header.js","components/ImgSlider.js","features/movie/movieSlice.js","components/Movies.js","components/Viewers.js","components/Home.js","components/Detail.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","storage","userSlice","email","photo","setUserLogin","setSignOut","selectUserName","user","selectUserPhoto","Header","dispatch","useDispatch","history","useHistory","userName","useSelector","userPhoto","useEffect","onAuthStateChanged","displayName","photoURL","push","Nav","to","Logo","src","NavMenu","alt","UserImg","onClick","signOut","then","LoginContainer","Login","signInWithPopup","result","styled","nav","img","div","ImgSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","Wrap","Slider","movieSlice","movies","setMovies","Movies","useState","axios","get","res","catch","err","console","log","Container","Content","map","movie","_id","cardImg","Viewers","Home","main","Detail","id","useParams","fetch","json","jsonRes","filter","index","Background","backgroundImg","Controls","PlayButton","href","video","TrailerButton","AddButtons","AddButton","GroupWatchButton","SubTitle","subTitle","Description","description","button","CTA","CTALogoOne","SignUp","CTALogoTwo","p","App","className","path","configureStore","reducer","movieReducer","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.57ae565b.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyA9BnlX96fMf7XiUVCFRsoQzG8DGERJkeY',\n    authDomain: 'disneyplus-clone-a33d5.firebaseapp.com',\n    projectId: 'disneyplus-clone-a33d5',\n    storageBucket: 'disneyplus-clone-a33d5.appspot.com',\n    messagingSenderId: '37918794208',\n    appId: '1:37918794208:web:dbe9842dfe1dda522a4b85',\n    measurementId: 'G-DRVLJKWRWG',\n}\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\nconst provider = new firebase.auth.GoogleAuthProvider()\nconst storage = firebase.storage()\n\nexport { auth, provider, storage }\nexport default db\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    name: '',\n    email: '',\n    photo: '',\n}\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserLogin: (state, action) => {\n            state.name = action.payload.name\n            state.email = action.payload.email\n            state.photo = action.payload.photo\n        },\n        setSignOut: (state) => {\n            state.name = null\n            state.email = null\n            state.photo = null\n        },\n    },\n})\n\nexport const { setUserLogin, setSignOut } = userSlice.actions\n\nexport const selectUserName = (state) => state.user.name\nexport const selectUserEmail = (state) => state.user.email\nexport const selectUserPhoto = (state) => state.user.photo\n\nexport default userSlice.reducer\n","import React, { useEffect } from 'react'\nimport { auth, provider } from '../firebase'\nimport styled from 'styled-components'\nimport { useHistory, Link } from 'react-router-dom'\nimport {\n    selectUserName,\n    selectUserPhoto,\n    setUserLogin,\n    setSignOut,\n} from '../features/user/userSlice'\nimport { useSelector, useDispatch } from 'react-redux'\n/* import Login from './Login' */\n\nfunction Header() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const userName = useSelector(selectUserName)\n    const userPhoto = useSelector(selectUserPhoto)\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                dispatch(\n                    setUserLogin({\n                        name: user.displayName,\n                        email: user.email,\n                        photo: user.photoURL,\n                    })\n                )\n                history.push('/')\n            }\n        })\n    }, [])\n\n    const signIn = () => {\n        auth.signInWithPopup(provider).then((result) => {\n            let user = result.user\n            dispatch(\n                setUserLogin({\n                    name: user.displayName,\n                    email: user.email,\n                    photo: user.photoURL,\n                })\n            )\n            history.push('/')\n        })\n    }\n\n    const signOut = () => {\n        auth.signOut().then(() => {\n            dispatch(setSignOut())\n            history.push('/login')\n        })\n    }\n\n    return (\n        <Nav>\n            <Link to='/'>\n                <Logo src='/images/logo.svg' />\n            </Link>\n            {!userName ? (\n                <LoginContainer>\n                    <Login onClick={signIn}>ロイング</Login>\n                </LoginContainer>\n            ) : (\n                <>\n                    <NavMenu>\n                        <a>\n                            <img src='/images/home-icon.svg' alt='' />\n                            <span>ホーム</span>\n                        </a>\n                        <a>\n                            <img src='/images/search-icon.svg' alt='' />\n                            <span>検索</span>\n                        </a>\n                        <a>\n                            <img src='/images/original-icon.svg' alt='' />\n                            <span>オリジナル</span>\n                        </a>\n                        <a>\n                            <img src='/images/movie-icon.svg' alt='' />\n                            <span>映画</span>\n                        </a>\n                        <a>\n                            <img src='/images/series-icon.svg' alt='' />\n                            <span>シリーズ</span>\n                        </a>\n                    </NavMenu>\n                    <UserImg onClick={signOut} src={userPhoto} />\n                </>\n            )}\n        </Nav>\n    )\n}\n\nexport default Header\n\nconst Nav = styled.nav`\n    height: 70px;\n    background: #090b13;\n    display: flex;\n    align-items: center;\n    padding: 0 36px;\n    /* overflow-x: hidden; */\n`\n\nconst Logo = styled.img`\n    width: 80px;\n    cursor: pointer;\n`\n\nconst NavMenu = styled.div`\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-left: 30px;\n    a {\n        display: flex;\n        align-items: center;\n        padding: 0 12px;\n        cursor: pointer;\n\n        img {\n            height: 20px;\n        }\n\n        span {\n            margin-left: 11px;\n            font-size: 18px;\n            letter-spacing: 1.42px;\n            position: relative;\n\n            &:after {\n                content: '';\n                height: 2px;\n                background: white;\n                position: absolute;\n\n                left: 0;\n                right: 0;\n                bottom: -3px;\n                opacity: 0;\n                transition: all cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.5s;\n                /* transform: translateX(-50%); */\n                transform-origin: left center;\n                transform: scaleX(0);\n            }\n        }\n\n        &:hover {\n            span:after {\n                /* transform: translateX(0); */\n                transform: scaleX(1);\n                opacity: 1;\n            }\n        }\n    }\n`\n\nconst UserImg = styled.img`\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    cursor: pointer;\n`\nconst Login = styled.div`\nborder:1px solid #f9f9f9;\npadding 8px 16px;\nborder-radius: 4px;\ntransition: all ease 100ms;\ncursor: pointer;\n\n&:hover {\n    background-color:#f9f9f9;\n    color:#000;\n    border-color:transparent;\n}\n`\nconst LoginContainer = styled.div`\n    flex: 1;\n    display: flex;\n    justify-content: flex-end;\n`\n","import React from 'react'\nimport Slider from 'react-slick'\nimport styled from 'styled-components'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\n\nfunction ImgSlider() {\n    let settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n    }\n    return (\n        <Carousel {...settings}>\n            <Wrap>\n                <img\n                    src='https://dssintlsas.akamaized.net/artwork/Bad_Batch_JPN_Keyart_L316_HD_1920x608-60762dcad9ae00261d6d12f5.png?location=product&impolicy=device_12'\n                    alt=''\n                />\n            </Wrap>\n            <Wrap>\n                <img\n                    src='https://dssintlsas.akamaized.net/artwork/Cinderella_1950_JPN_Keyart_Hero_L316_HD_1920x608-5c12af2bc5ebfaa3ea60c70c.png?location=product&impolicy=device_12'\n                    alt=''\n                />\n            </Wrap>\n            <Wrap>\n                <img\n                    src='https://dssintlsas.akamaized.net/artwork/Product/Disneyplus_L316_HD_1920x608.png?location=product&impolicy=device_12'\n                    alt=''\n                />\n            </Wrap>\n            <Wrap>\n                <img\n                    src='https://dssintlsas.akamaized.net/artwork/Avgs_Endgame_JPN_Keyart_L316_HD_1920x608-5d6fe5c24e2f694288e826c8.png?location=product&impolicy=device_12'\n                    alt=''\n                />\n            </Wrap>\n            <Wrap>\n                <img\n                    src='https://dssintlsas.akamaized.net/artwork/Star_Wars_New_Yoda_Chronicles_Clash_of_Skywalkers_JPN_Keyart_Hero_L316_HD_1920x608-6070a2419f015c6ab1430a04.png?location=product&impolicy=device_12'\n                    alt=''\n                />\n            </Wrap>\n        </Carousel>\n    )\n}\n\nexport default ImgSlider\n\nconst Carousel = styled(Slider)`\n    margin-top: 20px;\n\n    ul li button {\n        &:before {\n            font-size: 10px;\n            color: white;\n        }\n    }\n\n    li.slick-active button:before {\n        color: white;\n    }\n\n    .slick-list {\n        overflow: visible;\n    }\n\n    button {\n        z-index: 1;\n    }\n`\n\nconst Wrap = styled.div`\n    cursor: pointer;\n    img {\n        border: 4px solid transparent;\n        border-radius: 4px;\n        width: 100%;\n        height: 100%;\n        box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n            rgb(0 0 0 / 73%) 0px 19px 10px -10px;\n        transition: 200ms;\n\n        &:hover {\n            border: 4px solid rgba(249, 249, 249, 0.8);\n        }\n    }\n`\n","import { createSlice } from '@reduxjs/toolkit'\n\n/* const initialState = {\n    movies: [],\n} */\n\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState: {\n        movies: [],\n    },\n\n    reducers: {\n        setMovies: (state, action) => {\n            state.movies += action.payload\n        },\n    },\n})\n\nexport const { setMovies } = movieSlice.actions\n\nexport const selectMovies = (state) => state.movie.movies\n\nexport default movieSlice.reducer\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { selectMovies } from '../features/movie/movieSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport axios from 'axios'\n\nfunction Movies() {\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        axios\n            .get('/home')\n            .then((res) => {\n                setMovies(res.data)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    return (\n        <Container>\n            <h4>最新人気ランキング TOP15</h4>\n            <Content>\n                {movies &&\n                    movies.map((movie) => (\n                        <Wrap>\n                            <Link to={`/detail/${movie._id}`}>\n                                <img src={movie.cardImg} alt='' />\n                            </Link>\n                        </Wrap>\n                    ))}\n            </Content>\n        </Container>\n    )\n}\n\nexport default Movies\n\nconst Container = styled.div`\n    margin: 32px 0;\n`\nconst Content = styled.div`\n    display: grid;\n    grid-gap: 25px;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n`\n\nconst Wrap = styled.div`\n    overflow: hidden;\n    border: 3px solid rgba(149, 149, 149, 0.1);\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n        rgb(0 0 0 / 73%) 0px 19px 10px -10px;\n    transition: all ease 0.2s;\n    margin-bottom: 32px;\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n            rgb(0 0 0 / 73%) 0px 19px 10px -10px;\n        border-color: rgba(249, 249, 249, 0.8);\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Viewers() {\n    return (\n        <Container>\n            <Wrap>\n                <img src='/images/viewers-disney.png' alt='' />\n            </Wrap>\n            <Wrap>\n                <img src='/images/viewers-pixar.png' alt='' />\n            </Wrap>\n            <Wrap>\n                <img src='/images/viewers-marvel.png' alt='' />\n            </Wrap>\n            <Wrap>\n                <img src='/images/viewers-starwars.png' alt='' />\n            </Wrap>\n            <Wrap>\n                <img src='/images/viewers-national.png' alt='' />\n            </Wrap>\n        </Container>\n    )\n}\n\nexport default Viewers\n\nconst Container = styled.div`\n    margin: 30px 0px 0 0px;\n    display: grid;\n    grid-gap: 50px;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n`\n\nconst Wrap = styled.div`\n    border-radius: 25px;\n    border: 3px solid rgba(249, 249, 249, 0.1);\n    cursor: pointer;\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n        rgb(0 0 0 / 73%) 0px 19px 10px -10px;\n    transition: all ease 0.2s;\n    img {\n        width: 100%;\n        object-fit: cover;\n    }\n\n    &:hover {\n        transform: scale(1.05);\n        border-color: #fff;\n    }\n`\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport ImgSlider from './ImgSlider'\nimport Movies from './Movies'\nimport Viewers from './Viewers'\nimport db from '../firebase'\nimport { useDispatch } from 'react-redux'\nimport { setMovies } from '../features/movie/movieSlice'\n\nfunction Home() {\n    // const dispatch = useDispatch()\n\n    // useEffect(() => {\n    //     db.collection('movies').onSnapshot((snapshot) => {\n    //         let tempMovies = snapshot.docs.map((doc) => {\n    //             /* console.log(doc.data()) */\n    //             return { id: doc.id, ...doc.data() }\n    //         })\n\n    //         dispatch(setMovies(tempMovies))\n    //     })\n    // }, [])\n\n    return (\n        <Container>\n            <ImgSlider />\n            <Viewers />\n            <Movies />\n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.main`\n    min-height: calc(100vh - 70px);\n    padding: 0 calc(3.5vw + 5px);\n    position: relative;\n    overflow-x: hidden;\n\n    &:before {\n        background: url('/images/home-background.png') center center / cover\n            no-repeat fixed;\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n    }\n`\n","import React, { useEffect, useState } from 'react'\n\nimport styled from 'styled-components'\nimport { useParams, Link } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction Detail() {\n    const { id } = useParams()\n    console.log(id)\n\n    const [movies, setMovies] = useState([])\n\n    useEffect(async () => {\n        // axios\n        //     .get('/detail/:id')\n        //     .then((res) => {\n        //         console.log(res.data)\n        //         /* setMovies(res.data) */\n        //     })\n        //     .catch((err) => {\n        //         console.log(err)\n        //     })\n        const res = await fetch('/home')\n        const jsonRes = await res.json()\n        setMovies(jsonRes)\n    }, [])\n\n    return (\n        <>\n            {movies\n                .filter((movie) => movie._id === id)\n                .map((movie, index) => (\n                    <div>\n                        <Container key={index}>\n                            <Background>\n                                <img src={movie.backgroundImg} alt='' />\n                            </Background>\n                            <Controls>\n                                <PlayButton>\n                                    <img\n                                        src='/images/play-icon-black.png'\n                                        alt=''\n                                    />\n                                    <span>再生</span>\n                                </PlayButton>\n                                <a href={movie.video}>\n                                    <TrailerButton>\n                                        <img\n                                            src='/images/play-icon-white.png'\n                                            alt=''\n                                        />\n                                        <span>予告編</span>\n                                    </TrailerButton>\n                                </a>\n                                <AddButtons>\n                                    <AddButton>\n                                        <span>+</span>\n                                    </AddButton>\n                                    <small>お気に入り</small>\n                                </AddButtons>\n\n                                <GroupWatchButton>\n                                    <img src='/images/group-icon.png' alt='' />\n                                </GroupWatchButton>\n                            </Controls>\n                            <SubTitle>{movie.subTitle}</SubTitle>\n                            <Description>{movie.description}</Description>\n                        </Container>\n                    </div>\n                ))}\n        </>\n    )\n}\n\nexport default Detail\n\nconst Container = styled.div`\n    margin: auto;\n    width: 60%;\n    max-width: 1920px;\n    padding: 10px;\n`\n\nconst Background = styled.div`\n    opacity: 0.8;\n\n    img {\n        width: 100%;\n\n        object-fit: contain;\n    }\n\n    margin-bottom: 16px;\n`\n\nconst Controls = styled.div`\n    display: flex;\n    padding: 0 32px;\n    /* align-items: center; */\n\n    a {\n        text-decoration: none;\n    }\n`\n\nconst PlayButton = styled.button`\n    width: 150px;\n    border-radius: 4px;\n    font-size: 15px;\n    padding: 0 16px;\n    margin-right: 22px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 40px;\n    background: rgb(249, 249, 249);\n    border: none;\n    letter-spacing: 1.8px;\n    cursor: pointer;\n\n    &:hover {\n        background: rgb(198, 198, 198);\n    }\n`\n\nconst TrailerButton = styled(PlayButton)`\n    color: white;\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgb(249, 249, 249);\n\n    &:hover {\n        color: black;\n    }\n`\n\nconst AddButton = styled.button`\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    background-color: black;\n    color: rgba(255, 255, 255, 0.5);\n    cursor: pointer;\n\n    span {\n        font-size: 30px;\n    }\n`\n\nconst AddButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-right: 16px;\n\n    small {\n        font-size: 10px;\n        margin-top: 5px;\n\n        color: rgba(255, 255, 255, 0.5);\n    }\n`\n\nconst GroupWatchButton = styled(AddButton)`\n    background: #000;\n`\nconst SubTitle = styled.div`\n    padding: 0 32px;\n    color: rgb(249, 249, 249, 0.7);\n    font-size: 15px;\n    min-height: 20px;\n    margin-top: 16px;\n`\n\nconst Description = styled(SubTitle)`\n    color: rgb(249, 249, 249);\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Login() {\n    return (\n        <Container>\n            <CTA>\n                <CTALogoOne src='/images/cta-logo-one.svg' />\n                <SignUp>全てはこちら</SignUp>\n                <Description>\n                    ディズニー公式動画配信サーブス,\n                    ディズニー、ピクサー、マーベル、スターウォーズ、ナショナルジオグラフィックの名作・話題作がいつでも、どこでも、見放題\n                </Description>\n                <CTALogoTwo src='/images/cta-logo-two.png' />\n            </CTA>\n        </Container>\n    )\n}\n\nexport default Login\n\nconst Container = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    display: flex;\n    align-items: top;\n    justify-content: center;\n\n    &:before {\n        background-image: url('images/login-background.jpg');\n        background-position: top;\n        background-size: cover;\n        background-repeat: no-repeat;\n        position: absolute;\n        content: '';\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        opacity: 0.8;\n        z-index: -1;\n    }\n`\n\nconst CTA = styled.div`\n    max-width: 650px;\n    padding: 80px 40px;\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    margin-top: 150px;\n    align-items: center;\n`\n\nconst CTALogoOne = styled.img``\nconst CTALogoTwo = styled.img`\n    width: 90%;\n`\n\nconst SignUp = styled.a`\n    width: 100%;\n    background-color: #0063e5;\n    padding: 17px 0;\n    color: #f9f9f9;\n    border-radius: 4px;\n    text-align: center;\n    cursor: pointer;\n    font-weight: bold;\n    font-size: 24px;\n    transition: all 100ms;\n    letter-spacing: 8px;\n    margin-top: 8px;\n    margin-bottom: 12px;\n\n    &:hover {\n        background: #0483ee;\n    }\n`\n\nconst Description = styled.p`\n    font-size: 14px;\n    text-align: center;\n    line-height: 1.5;\n`\n","import React from 'react'\nimport { Counter } from './features/counter/Counter'\nimport './App.css'\nimport Header from './components/Header'\nimport Home from './components/Home'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Detail from './components/Detail'\nimport Login from './components/Login'\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Router>\n                <Header />\n                <Switch>\n                    <Route path='/login'>\n                        <Login />\n                    </Route>\n                    <Route path='/detail/:id'>\n                        <Detail />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport movieReducer from '../features/movie/movieSlice'\nimport userReducer from '../features/user/userSlice'\nimport userSlice from '../features/user/userSlice'\n\nexport default configureStore({\n    reducer: {\n        movie: movieReducer,\n        user: userSlice,\n    },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};"],"sourceRoot":""}